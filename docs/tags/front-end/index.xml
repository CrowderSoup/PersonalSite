<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Front End on CrowderSoup</title>
    <link>https://crowdersoup.com/tags/front-end/</link>
    <description>Recent content in Front End on CrowderSoup</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 30 Nov 2018 14:30:00 +0000</lastBuildDate>
    
	<atom:link href="https://crowdersoup.com/tags/front-end/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Basics Plus: A new Hugo Theme</title>
      <link>https://crowdersoup.com/post/site-updates/basics-plus/</link>
      <pubDate>Fri, 30 Nov 2018 14:30:00 +0000</pubDate>
      
      <guid>https://crowdersoup.com/post/site-updates/basics-plus/</guid>
      <description>This site has had a couple new themes lately, but I&amp;rsquo;ve finally settled on one: Basics Plus. This is actually a theme that I&amp;rsquo;ve forked from Basics. It&amp;rsquo;s a fairly simple and paired down theme. I forked it so that I could change a couple things:
 The top menu (more dynamic, able to add more items) Add Disqus comments The byline  These are some fairly small feature changes. I plan to make more changes / refinements going forward while keeping the clean / simple look and feel.</description>
    </item>
    
    <item>
      <title>New Theme!</title>
      <link>https://crowdersoup.com/post/site-updates/new-theme/</link>
      <pubDate>Wed, 06 Jan 2016 16:30:00 +0000</pubDate>
      
      <guid>https://crowdersoup.com/post/site-updates/new-theme/</guid>
      <description>I recently started using Pelican static site generator for this blog. I was drawn to it for a few reasons:
 It uses Jinja2 for templates, which I love. It written in python It reminds me a lot of Flask (this might be because of using Jinja2&amp;hellip;)  I&amp;rsquo;ve done a few interesting things with this site though. I&amp;rsquo;m hosting the repo that contains the source content, configuration, etc. on Gitlab.</description>
    </item>
    
    <item>
      <title>Using vh with calc In CSS</title>
      <link>https://crowdersoup.com/post/programming/css/using-vh-with-calc-in-css/</link>
      <pubDate>Tue, 17 Nov 2015 09:45:00 +0000</pubDate>
      
      <guid>https://crowdersoup.com/post/programming/css/using-vh-with-calc-in-css/</guid>
      <description>I often have need to build layout&amp;rsquo;s that vary depending on the content put in them. I can&amp;rsquo;t always count on that content being the same (cough CMSs cough). It&amp;rsquo;s just one of those things you have to do.
One thing I&amp;rsquo;m having to do a lot though, is making the body of a page take up a certain amount of space so that the footer doesn&amp;rsquo;t look weird. In the past I&amp;rsquo;ve used JavaScript to make the footer take up the remaining space on the page if the content didn&amp;rsquo;t take up enough.</description>
    </item>
    
    <item>
      <title>Managing Scope Using Call, Apply, and Bind</title>
      <link>https://crowdersoup.com/post/programming/javascript/managing-scope-using-call-apply-and-bind/</link>
      <pubDate>Mon, 16 Nov 2015 13:20:08 +0000</pubDate>
      
      <guid>https://crowdersoup.com/post/programming/javascript/managing-scope-using-call-apply-and-bind/</guid>
      <description>Call Calls a function, with the specified arguments passed in
The first argument becomes this, the rest are passed in as regular arguments. Using call allows you to maintain the scope of this accross methods. It works like this:
 Here we&amp;rsquo;re using prototypical inheritance to allow us to inheirit properties from Animal in Dog and Cat. Using call allows us to invoke Animal to initialize it&amp;rsquo;s properties while maintaining the correct scope.</description>
    </item>
    
    <item>
      <title>JavaScript: Array&#39;s with named Properties</title>
      <link>https://crowdersoup.com/post/programming/javascript/javascript-arrays-with-named-properties/</link>
      <pubDate>Wed, 11 Nov 2015 12:46:49 +0000</pubDate>
      
      <guid>https://crowdersoup.com/post/programming/javascript/javascript-arrays-with-named-properties/</guid>
      <description>Adding named properties to arrays in JavaScript can be handy in a few different cases. For instance:
 You need a nice formatted title / description for a data set. Rather than having multiple objects you can use named properties and get away with only using one. You want to add some functions to an array for whatever reason Lots of other reasons that I can&amp;rsquo;t think of right now!  Basically, this just buys you a nice way to encapsulate all the data you might need, without having to use an object with a nested array, or multiple objects.</description>
    </item>
    
  </channel>
</rss>
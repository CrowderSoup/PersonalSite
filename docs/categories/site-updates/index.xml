<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Site Updates on CrowderSoup</title>
    <link>https://crowdersoup.com/categories/site-updates/</link>
    <description>Recent content in Site Updates on CrowderSoup</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 05 May 2018 16:30:00 +0000</lastBuildDate>
    
	<atom:link href="https://crowdersoup.com/categories/site-updates/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Using Husky to Build Hugo Site</title>
      <link>https://crowdersoup.com/post/site-updates/husky/</link>
      <pubDate>Sat, 05 May 2018 16:30:00 +0000</pubDate>
      
      <guid>https://crowdersoup.com/post/site-updates/husky/</guid>
      <description>I&amp;rsquo;ve been making some efforts to streamline the publishing process for this site. I&amp;rsquo;ve read about tools like Netlify and Lektor, but I wanted to keep things as close to a basic Hugo site as possible.
To that end, I wanted to use git hooks to run hugo whenever I ran git commit. That way to publish a new post I simply had to write it in markdown, save, commit and push.</description>
    </item>
    
    <item>
      <title>GitHub Pages Over HTTPS</title>
      <link>https://crowdersoup.com/post/site-updates/https/</link>
      <pubDate>Sat, 05 May 2018 11:45:00 +0000</pubDate>
      
      <guid>https://crowdersoup.com/post/site-updates/https/</guid>
      <description>Using HTTPS for your site has lots of benefits. Chief among them being security. Using HTTPS ensures that no one can intercept and read traffic between you and the site you&amp;rsquo;re visiting.
However, it&amp;rsquo;s traditionally been somewhat difficult and expensive to provide HTTPS for your sites visitors. Now though, with Let&amp;rsquo;s Encrypt an SSL certificate is free! And if you&amp;rsquo;re using GitHub pages with a custom domain for hosting using it couldn&amp;rsquo;t be easier.</description>
    </item>
    
    <item>
      <title>Keybase Proof</title>
      <link>https://crowdersoup.com/post/site-updates/keybase/</link>
      <pubDate>Tue, 01 May 2018 11:45:00 +0000</pubDate>
      
      <guid>https://crowdersoup.com/post/site-updates/keybase/</guid>
      <description>I&amp;rsquo;ve added my Keybase Proof as a text file at the root of this site. I used to have my site proven via DNS but for whatever reason CloudFlare removed my TXT record breaking the proof. I decided that having the .txt file proof was more resilient because even if I change hosting (Currently on Github Pages) my proof will remain intact.
If you aren&amp;rsquo;t on Keybase check it out. I like to think of it as &amp;ldquo;crypto-as-a-service&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Moving to Hugo</title>
      <link>https://crowdersoup.com/post/site-updates/hugo/</link>
      <pubDate>Wed, 29 Nov 2017 23:41:08 +0000</pubDate>
      
      <guid>https://crowdersoup.com/post/site-updates/hugo/</guid>
      <description>Last night I got the wild hare to migrate my personal site from Pelican to Hugo. I&amp;rsquo;ve been meaning to do it for a while now, so to give myself the push I needed to get it done I deleted my old personal site from Github.
Differences Front Matter Honestly the biggest different for content is &amp;ldquo;front matter&amp;rdquo;. Both Hugo and Pelican, as static site generators, use front matter to describe pieces of content.</description>
    </item>
    
    <item>
      <title>New Theme!</title>
      <link>https://crowdersoup.com/post/site-updates/new-theme/</link>
      <pubDate>Wed, 06 Jan 2016 16:30:00 +0000</pubDate>
      
      <guid>https://crowdersoup.com/post/site-updates/new-theme/</guid>
      <description>I recently started using Pelican static site generator for this blog. I was drawn to it for a few reasons:
 It uses Jinja2 for templates, which I love. It written in python It reminds me a lot of Flask (this might be because of using Jinja2&amp;hellip;)  I&amp;rsquo;ve done a few interesting things with this site though. I&amp;rsquo;m hosting the repo that contains the source content, configuration, etc. on Gitlab.</description>
    </item>
    
  </channel>
</rss>